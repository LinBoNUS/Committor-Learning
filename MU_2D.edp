real eps=20;
real a=1.,b=1.,c;
border GammaC1(t=0,2*pi) { x = -0.558223634633+0.1*cos(-t); y = 1.4417258418+0.1*sin(-t); };
border GammaC2(t=0,2*pi) { x = 0.623499404931+0.1*cos(-t); y = 0.0280377585287+0.1*sin(-t); };

border Gamma1(t=-0.5,2) { x = 1; y = t; };
border Gamma2(t=-1,1.5) { x = -t; y = 2; };
border Gamma3(t=-2,0.5) { x = -1.5; y = -t; };
border Gamma4(t=-1.5,1) { x = t; y = -0.5; };

int m=100,mb=50;
mesh Th=buildmesh(GammaC1(mb)+GammaC2(mb)+Gamma1(m)+Gamma2(m)+Gamma3(m)+Gamma4(m));

real beta = 1./eps;
func U=exp( -beta*(-200*exp(-(x-1)^2-10*y^2)-100*exp(-x^2-10*(y-0.5)^2)-170*exp(-6.5*(x+0.5)^2+11*(x+0.5)*(y-1.5)-6.5*(y-1.5)^2)+15*exp(0.7*(x+1)^2+0.6*(x+1)*(y-1)+0.7*(y-1)^2) +9*sin(2*5*pi*x)*sin(2*5*pi*y) ) );
func g=0;
func g2=1;

fespace Vh(Th,P2);
Vh phi,w;
solve BVP(phi, w)=int2d(Th)((dx(phi)*dx(w)+dy(phi)*dy(w))*U)+on(GammaC1, phi=g)+on(GammaC2, phi=g2);

ifstream fin("X");
ofstream fout("q");
Vh ux = dx(phi);
Vh uy = dy(phi);
real xx,yy;
while (!fin.eof)
{
    fin>>xx>>yy;
    fout<<phi(xx,yy)<<" ";
    fout<<endl;
}